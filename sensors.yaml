# Xiaomi Oczyszczacz
- platform: template
  sensors:
    xiaomi_airpurifier_temp:
      friendly_name: "Temperatura"
      value_template: "{{ state_attr('fan.Oczyszczacz', 'temperature') }}"
      unit_of_measurement: "°C"
      device_class: "temperature"
    xiaomi_airpurifier_humidity:
      friendly_name: "Wilgotność"
      value_template: "{{ state_attr('fan.Oczyszczacz', 'humidity') }}"
      unit_of_measurement: "%"
      device_class: "humidity"
    xiaomi_airpurifier_air_quality_pm25:
      friendly_name: "Jakość powietrza"
      value_template: "{{ state_attr('fan.Oczyszczacz', 'aqi') }}"
      unit_of_measurement: "μg/m³"
      icon_template: "mdi:weather-fog"
    xiaomi_airpurifier_speed:
      friendly_name: "Prędkość"
      value_template: "{{ state_attr('fan.Oczyszczacz', 'motor_speed') }}"
      unit_of_measurement: "rpm"
      icon_template: "mdi:speedometer"
    xiaomi_airpurifier_filter_remaining:
      friendly_name: "Wymiana filtra"
      value_template: "{{ state_attr('fan.Oczyszczacz', 'filter_life_remaining') }}"
      unit_of_measurement: "%"
      icon_template: "mdi:heart-outline"
    xiaomi_airpurifie_hours_used:
      friendly_name: "Używanie oczyszczacza"
      unit_of_measurement: 'godz'
      value_template: "{{ state_attr('fan.Oczyszczacz', 'filter_hours_used') }}"
    xiaomi_airpurifie_fan_mode:
      friendly_name: "Tryb"
      value_template: "{{ state_attr('fan.Oczyszczacz', 'mode') }}"

# Xiaomi Nawilżacz
- platform: template
  sensors:
    nawilzacz_temp:
      friendly_name: "Temperatura"
      value_template: "{{ state_attr('fan.nawilzacz', 'temperature') }}"
      unit_of_measurement: "°C"
      device_class: "temperature"
    nawilzacz_humidity:
      friendly_name: "Wilgotność"
      value_template: "{{ state_attr('fan.nawilzacz', 'humidity') }}"
      unit_of_measurement: "%"
      device_class: "humidity"
    nawilzacz_depth:
      friendly_name: "Jakość powietrza"
      value_template: "{{ state_attr('fan.nawilzacz', 'depth') }}"
      unit_of_measurement: "%"
      icon_template: "mdi:weather-fog"
    nawilzacz_speed:
      friendly_name: "Prędkość"
      value_template: "{{ state_attr('fan.nawilzacz', 'motor_speed') }}"
      unit_of_measurement: "rpm"
      icon_template: "mdi:speedometer"
#    xiaomi_airpurifier_filter_remaining:
#      friendly_name: "Wymiana filtra"
#      value_template: "{{ state_attr('fan.nawilzacz', 'filter_life_remaining') }}"
#      unit_of_measurement: "%"
#      icon_template: "mdi:heart-outline"
    nawilzacz_use_time:
      friendly_name: "Używanie oczyszczacza"
      unit_of_measurement: 'godz'
      value_template: "{{ state_attr('fan.nawilzacz', 'use_time') }}"
    nawilzacz_mode:
      friendly_name: "Tryb"
      value_template: "{{ state_attr('fan.nawilzacz', 'mode') }}"
      
#RPI Time
    rpi_uptime:
      entity_id:
        - sensor.time
      value_template: >
        {%- set dt = strptime(states('sensor.last_boot'),"%Y-%m-%dT%H:%M:%S%z") %}
        {%- set time =  (now().timestamp() - dt.timestamp()) | int %}
        {%- set minutes = ((time % 3600) // 60) %}
        {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
        {%- set hours = ((time % 86400) // 3600) %}
        {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
        {%- set days = (time // 86400) %}
        {%- set days = '{}d '.format(days) if days > 0 else '' %}
        {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
        
    disk_use_total:
      value_template: >
        {{ (states('sensor.disk_free_home') | float + states('sensor.disk_use_home') | float) | round(1) }}
      unit_of_measurement: "GiB"
    memory_use_total:
      value_template: >
        {{ (states('sensor.memory_free') | float + states('sensor.memory_use') | float) | round(1) }}
      unit_of_measurement: "MiB"
      

#Temperatura CPU Raspberry
- platform: command_line
  name: CPU Temperature
  command: "cat /sys/devices/virtual/thermal/thermal_zone0/temp"
  unit_of_measurement: "°C"
  value_template: '{{ value | multiply(0.001) | round(1) }}'

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /home
    - type: disk_use
      arg: /home
#    - type: disk_use
#      arg: /srv/dev-disk-by-id-usb-USB3.0_high_speed_000000123AE7-0-0-part3/data
      
    - type: disk_free
      arg: /home
#    - type: disk_free
#      arg: /srv/dev-disk-by-id-usb-USB3.0_high_speed_000000123AE7-0-0-part3/data
    - type: memory_use
    - type: memory_free
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot


#      disk_use_total:
#        value_template: >
#          {{ (states('sensor.disk_free_home') | float + states('sensor.disk_use_home') | float) | round(1) }}
#        unit_of_measurement: "GiB"
        
#      memory_use_total:
#        value_template: >
#          {{ (states('sensor.memory_free') | float + states('sensor.memory_use') | float) | round(1) }}
#        unit_of_measurement: "MiB"

#APC
- platform: time_date
  display_options:
    - 'time'
    - 'date_time'

- platform: version
